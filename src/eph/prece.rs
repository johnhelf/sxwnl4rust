use crate::eph::eph_base::{RAD, llr_conv, rad2mrad};

pub struct Prece;

impl Prece {
    /// IAU1976岁差表
    const PRECE_TAB_IAU1976: [(f64, f64, f64, f64); 12] = [
        (0.0, 5038.7784, -1.07259, -0.001147),       // fi
        (84381.448, 0.0, 0.05127, -0.007726),        // w
        (0.0, 4.1976, 0.19447, -0.000179),           // P
        (0.0, -46.8150, 0.05059, 0.000344),          // Q
        (84381.448, -46.8150, -0.00059, 0.001813),   // E
        (0.0, 10.5526, -2.38064, -0.001125),         // x
        (0.0, 47.0028, -0.03301, 0.000057),          // pi
        (629554.886, -869.8192, 0.03666, -0.001504), // II
        (0.0, 5029.0966, 1.11113, 0.000006),         // p
        (0.0, 2004.3109, -0.42665, -0.041833),       // th
        (0.0, 2306.2181, 0.30188, 0.017998),         // Z
        (0.0, 2306.2181, 1.09468, 0.018203),         // z
    ];

    /// IAU2000岁差表
    const PRECE_TAB_IAU2000: [(f64, f64, f64, f64, f64, f64); 12] = [
        (0.0, 5038.478750, -1.07259, -0.001147, 0.0, 0.0), // fi
        (84381.448, -0.025240, 0.05127, -0.007726, 0.0, 0.0), // w
        (0.0, 4.1976, 0.19447, -0.000179, 0.0, 0.0),       // P
        (0.0, -46.8150, 0.05059, 0.000344, 0.0, 0.0),      // Q
        (84381.448, -46.84024, -0.00059, 0.001813, 0.0, 0.0), // E
        (0.0, 10.5526, -2.38064, -0.001125, 0.0, 0.0),     // x
        (0.0, 47.0028, -0.03301, 0.000057, 0.0, 0.0),      // pi
        (629554.886, -869.8192, 0.03666, -0.001504, 0.0, 0.0), // II
        (0.0, 5028.79695, 1.11113, 0.000006, 0.0, 0.0),    // p
        (
            0.0,
            2004.191748,
            -0.426935,
            -0.041825,
            -0.0000601,
            -0.0000001,
        ), // th
        (
            2.5976176,
            2306.080951,
            0.301902,
            0.017966,
            -0.0000327,
            -0.0000002,
        ), // Z
        (
            -2.5976176,
            2306.080323,
            1.094779,
            0.018227,
            0.0000470,
            -0.0000003,
        ), // z
    ];

    /// P03岁差表
    const PRECE_TAB_P03: [(f64, f64, f64, f64, f64, f64); 12] = [
        (
            0.0,
            5038.481507,
            -1.0790069,
            -0.00114045,
            0.000132851,
            -9.51e-8,
        ), // fi
        (
            84381.406000,
            -0.025754,
            0.0512623,
            -0.00772503,
            -4.67e-7,
            3.337e-7,
        ), // w
        (0.0, 4.199094, 0.1939873, -0.00022466, -9.12e-7, 1.20e-8), // P
        (0.0, -46.811015, 0.0510283, 0.00052413, -6.46e-7, -1.72e-8), // Q
        (
            84381.406000,
            -46.836769,
            -0.0001831,
            0.00200340,
            -5.76e-7,
            -4.34e-8,
        ), // E
        (
            0.0,
            10.556403,
            -2.3814292,
            -0.00121197,
            0.000170663,
            -5.60e-8,
        ), // x
        (0.0, 46.998973, -0.0334926, -0.00012559, 1.13e-7, -2.2e-9), // pi
        (
            629546.7936,
            -867.95758,
            0.157992,
            -0.0005371,
            -0.00004797,
            7.2e-8,
        ), // II
        (
            0.0,
            5028.796195,
            1.1054348,
            0.00007964,
            -0.000023857,
            3.83e-8,
        ), // p
        (
            0.0,
            2004.191903,
            -0.4294934,
            -0.04182264,
            -7.089e-6,
            -1.274e-7,
        ), // th
        (
            2.650545,
            2306.083227,
            0.2988499,
            0.01801828,
            -5.971e-6,
            -3.173e-7,
        ), // Z
        (
            -2.650545,
            2306.077181,
            1.0927348,
            0.01826837,
            -0.000028596,
            -2.904e-7,
        ), // z
    ];
    /// 岁差计算
    pub fn prece(t: f64, sc: &str, mx: &str) -> f64 {
        let (n, _p) = match mx {
            "IAU1976" => (4, "IAU1976"),
            "IAU2000" => (6, "IAU2000"),
            "P03" => (6, "P03"),
            _ => (6, "P03"), // 默认使用P03
        };

        // 获取岁差量索引
        let sc_idx = "fi w  P  Q  E  x  pi II p  th Z  z "
            .find(&format!("{} ", sc))
            .unwrap_or(0)
            / 3;

        // 计算岁差
        let mut tn = 1.0;
        let mut c = 0.0;

        for _i in 0..n {
            match mx {
                "IAU1976" => {
                    c += Self::PRECE_TAB_IAU1976[sc_idx].0 * tn;
                }
                "IAU2000" => {
                    c += Self::PRECE_TAB_IAU2000[sc_idx].0 * tn;
                }
                _ => {
                    // P03
                    c += Self::PRECE_TAB_P03[sc_idx].0 * tn;
                }
            }
            tn *= t;
        }

        c / RAD
    }

    //====岁差旋转

    /// 返回P03黄赤交角,t是世纪数
    pub fn hcjj(t: f64) -> f64 {
        let t2 = t * t;
        let t3 = t2 * t;
        let t4 = t3 * t;
        let t5 = t4 * t;

        (84381.4060 - 46.836769 * t - 0.0001831 * t2 + 0.00200340 * t3
            - 5.76e-7 * t4
            - 4.34e-8 * t5)
            / RAD
    }

    /// J2000赤道转Date赤道
    pub fn cdllr_j2d(t: f64, llr: &[f64], mx: &str) -> [f64; 3] {
        let z = Self::prece(t, "Z", mx) + llr[0];
        let z2 = Self::prece(t, "z", mx);
        let th = Self::prece(t, "th", mx);

        let cos_w = llr[1].cos();
        let cos_h = th.cos();
        let sin_w = llr[1].sin();
        let sin_h = th.sin();

        let a = cos_w * z.sin();
        let b = cos_h * cos_w * z.cos() - sin_h * sin_w;
        let c = sin_h * cos_w * z.cos() + cos_h * sin_w;

        [rad2mrad(a.atan2(b) + z2), c.asin(), llr[2]]
    }

    /// Date赤道转J2000赤道
    pub fn cdllr_d2j(t: f64, llr: &[f64], mx: &str) -> [f64; 3] {
        let z = -Self::prece(t, "z", mx) + llr[0];
        let z2 = -Self::prece(t, "Z", mx);
        let th = -Self::prece(t, "th", mx);

        let cos_w = llr[1].cos();
        let cos_h = th.cos();
        let sin_w = llr[1].sin();
        let sin_h = th.sin();

        let a = cos_w * z.sin();
        let b = cos_h * cos_w * z.cos() - sin_h * sin_w;
        let c = sin_h * cos_w * z.cos() + cos_h * sin_w;

        [rad2mrad(a.atan2(b) + z2), c.asin(), llr[2]]
    }

    /// 黄道球面坐标_J2000转Date分点
    pub fn hdllr_j2d(t: f64, llr: &[f64], mx: &str) -> [f64; 3] {
        let mut r = [llr[0], llr[1], llr[2]];
        r[0] += Self::prece(t, "fi", mx);
        r = llr_conv(&r, Self::prece(t, "w", mx));
        r[0] -= Self::prece(t, "x", mx);
        r = llr_conv(&r, -Self::prece(t, "E", mx));
        r
    }

    /// 黄道球面坐标_Date分点转J2000
    pub fn hdllr_d2j(t: f64, llr: &[f64], mx: &str) -> [f64; 3] {
        let mut r = [llr[0], llr[1], llr[2]];
        r = llr_conv(&r, Self::prece(t, "E", mx));
        r[0] += Self::prece(t, "x", mx);
        r = llr_conv(&r, -Self::prece(t, "w", mx));
        r[0] -= Self::prece(t, "fi", mx);
        r[0] = rad2mrad(r[0]);
        r
    }
}
